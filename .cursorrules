# 프로젝트 
이력서 PDF 기반 심층된 기술면접 질문 생성 프로젝트

## 프로젝트 기술스택
- react
- typescript
- axios
- Ant Design (ui library)
- tailwind (css library)
- react-router-dom
- zustand 

## 유저플로우
flowchart TD
    A[프로젝트 소개 페이지] --> B[시작하기 버튼 클릭]
    B --> C[PDF 파일 업로드 화면]
    C --> C1{파일 선택 완료?}
    C1 -->|아니오| C
    C1 -->|예| C2{유효한 PDF?}
    C2 -->|아니오| C3[에러 메시지 표시]
    C3 --> C
    C2 -->|예| D[심층 기술 질문 1/N]
    
    D --> D1[사용자 응답 입력]
    D1 --> E{다음 또는 종료?}
    E -->|다음| D2[심층 기술 질문 2/N]
    D2 --> D3[사용자 응답 입력]
    D3 --> E2{다음 또는 종료?}
    E2 -->|다음| D4[심층 기술 질문 .../N]
    D4 -.-> E3{다음 또는 종료?}
    E3 -->|다음| D5[심층 기술 질문 N/N]
    D5 --> D6[사용자 응답 입력]
    D6 --> E4{다음 또는 종료?}
    
    E -->|종료| F[결과 페이지]
    E2 -->|종료| F
    E3 -->|종료| F
    E4 -->|다음 또는 종료| F
    
    F --> F1[결과 요약 표시]
    F1 --> G[피드백 PDF 다운로드 버튼]
    G --> G1{다운로드 클릭?}
    G1 -->|예| H[피드백 PDF 생성 및 다운로드]

## UX
- 유저 친환경적으로 사용할 수 있도록 UX에 신경을 많이 쓸 것
- 불필요한 액션을 최소화 시켜줄 것

## 기능 
1. PDF 파일 업로드 기능
	- 드래그 앤 드롭 기능 추가
	- 파일 크기/형식 제한 사전 안내
	- 업로드 진행 상태 표시
	- PDF 미리보기 기능
	- PDF 분석 중 로딩 상태 표시
	
2. PDF 파일 기반 심층 기술 질문 생성
  - 예를 들어서 선택된 기술이 리액트 이고 답변을 하면 꼬리 질문을 계속해서 할 수 있음
  - 질문에 대한 답변을 할 수 있음 -> 추가되면 좋음: (답변 기록(텍스트/음성) 옵션)
  - 질문에 대한 답변을 기반으로 해당 기술에 대한 추가 질문이 들어옴
	- 다음 버튼을 누르면 다음 기술 질문으로 넘어감 (리액트 -> 리액트 쿼리 와 같은 다른 기술로 넘어가짐)
  - 종료 및 다음 버튼이 있는데 종료버튼을 누르면 결과 화면으로 넘어감

3. 결과에 대한 시각화 및 결과 PDF 다운로드 기능
	- 분야별 강점/약점 분석
	- 개선 제안 및 학습 리소스 추천
	
## API 스펙
- 

## 구조
typeScript 사용
- 모든 코드에 TypeScript를 사용하고, 인터페이스를 타입보다 선호합니다.
- 열거형을 피하고 대신 맵을 사용합니다.
- TypeScript 인터페이스를 사용하는 함수형 컴포넌트 사용.

구문 및 서식
- 조건문에서 불필요한 중괄호 피하기; 간단한 문에는 간결한 구문 사용.

UI 및 스타일링
- 컴포넌트 및 스타일링에 Ant Design, tailwind css 사용
- Ant Design에서 제공되는 기본 컴포넌트를 적극 활용
- 모바일 우선 접근법 사용.

상태관리 
- 전역적으로 관리가 필요한 구조일 경우 zustand를 활용해서 상태관리하기
- 서버 데이터 경우 tanstack-query를 사용해서 만들어줄 것